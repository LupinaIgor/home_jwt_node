import {SERVER_HOST, SERVER_NAME, SERVER_PORT} from "./config/index.js";
// SERVER_HOST, SERVER_NAME, и SERVER_PORT берутся из файла конфигурации config/index.js.
//     Эти переменные содержат параметры для запуска сервера:
//     SERVER_HOST — адрес (например, 0.0.0.0 для работы на всех сетевых интерфейсах).
//     SERVER_NAME — имя сервера, для удобного отображения (например, "Azure Express").
//     SERVER_PORT — порт, на котором сервер будет слушать запросы (например, 3000).

import express from 'express';
// Импортируется библиотека express, которая позволяет легко создавать и настраивать серверные приложения.
const app = express();
// Создается объект app, представляющий серверное приложение.
// На этом объекте настраиваются маршруты, middleware (промежуточная обработка), и прочая логика.

/**
 * Настройка папки статики
 */
import path from 'path';//Импорт модуля path из стандартной библиотеки Node.js.Этот модуль используется для работы с файловыми путями
const staticFolder = path.resolve('wwwroot');
// Создается переменная staticFolder, в которой хранится абсолютный путь к папке wwwroot.
// Функция path.resolve('wwwroot') преобразует относительный путь 'wwwroot' в абсолютный путь, основываясь на текущей рабочей директории.
console.log('StaticFolder', staticFolder)
// Выводит в консоль абсолютный путь к папке wwwroot для проверки или отладки.
app.use(express.static(staticFolder));
// Указывает Express использовать папку staticFolder (в данном случае wwwroot) как папку для статических файлов.
// Это означает, что все файлы внутри wwwroot (например, HTML, CSS, JavaScript, изображения) будут доступны напрямую через веб-сервер.



/**
 * Server run
 */
app.listen(SERVER_PORT, SERVER_HOST, () => {
    console.log(`HTTP Server '${SERVER_NAME}' is running on http://${SERVER_HOST}:${SERVER_PORT}`);
    // app.listen:
    // Этот метод запускает сервер на заданных хосте и порту.
    //     Аргументы:
    // SERVER_PORT — порт, который сервер слушает (например, 3000).
    // SERVER_HOST — IP-адрес (например, 0.0.0.0 для работы снаружи, или 127.0.0.1 для работы только локально).
    // Третий аргумент — это колбэк-функция, которая выполняется, когда сервер успешно запустился.

});